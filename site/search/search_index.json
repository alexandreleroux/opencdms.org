{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":""},{"location":"developers/","text":"OpenCDMS for developers \u00b6","title":"OpenCDMS for developers"},{"location":"developers/#opencdms-for-developers","text":"","title":"OpenCDMS for developers"},{"location":"experts/","text":"OpenCDMS for experts \u00b6","title":"OpenCDMS for experts"},{"location":"experts/#opencdms-for-experts","text":"","title":"OpenCDMS for experts"},{"location":"get-involved/","text":"Getting Involved \u00b6","title":"Get Involved"},{"location":"get-involved/#getting-involved","text":"","title":"Getting Involved"},{"location":"history/","text":"History \u00b6 The concept for OpenCDMS arose during work on the Climate Data Management System Specifications in 2014 and was formally proposed by the Expert Team for Climate Data Management Systems (ET-CDMS) the following year. ET-CDMS Policy Statement ET-CDMS notes that: Currently, significant investment is needed to maintain a multitude of CDMS worldwide to generate data for national, regional and global analyses These CDMS are not compliant with the new WMO-No.1131, Climate Data Management Systems Specifications Significant investment will be required to conform to the requirements of WMO-No. 1131 It will be very expensive and wasteful of resources to develop the same functionality in many CDMS There are several open source CDMS used by WMO Members There is considerable potential to address this situation by rationalising these open source CDMS Therefore ET-CDMS proposes that: Open source CDMS should converge on one Reference Open Source CDMS, namely OpenCDMS Investment is required to make this happen The OpenCDMS project was formerly established during a workshop in mid-2019 and was adopted as an official project of the OpenWIS Association AISBL in May 2021. The project originally encompassed two competing and conflicting approaches (previously referred to as \u201ctop-down\u201d and \u201cbottom-up\u201d). The top-down approach aimed to begin by agreeing the necessary additional standards and design for a next-generation CDMS, with the system then being implemented as a new solution built on an entirely blank canvas. The bottom-up approach aimed to begin with existing software and iteratively improve existing solutions to reach essentially the same outcome. These competing approaches are now coexisting and stakeholders are collaborating on a common software core that can support both existing and future systems. This allows both approaches to proceed on different timescales. Furthermore, the common approach will improve interoperability and enable automated migration between systems. The collaborative approach is illustrated in the OpenCDMS Architecture .","title":"History"},{"location":"history/#history","text":"The concept for OpenCDMS arose during work on the Climate Data Management System Specifications in 2014 and was formally proposed by the Expert Team for Climate Data Management Systems (ET-CDMS) the following year. ET-CDMS Policy Statement ET-CDMS notes that: Currently, significant investment is needed to maintain a multitude of CDMS worldwide to generate data for national, regional and global analyses These CDMS are not compliant with the new WMO-No.1131, Climate Data Management Systems Specifications Significant investment will be required to conform to the requirements of WMO-No. 1131 It will be very expensive and wasteful of resources to develop the same functionality in many CDMS There are several open source CDMS used by WMO Members There is considerable potential to address this situation by rationalising these open source CDMS Therefore ET-CDMS proposes that: Open source CDMS should converge on one Reference Open Source CDMS, namely OpenCDMS Investment is required to make this happen The OpenCDMS project was formerly established during a workshop in mid-2019 and was adopted as an official project of the OpenWIS Association AISBL in May 2021. The project originally encompassed two competing and conflicting approaches (previously referred to as \u201ctop-down\u201d and \u201cbottom-up\u201d). The top-down approach aimed to begin by agreeing the necessary additional standards and design for a next-generation CDMS, with the system then being implemented as a new solution built on an entirely blank canvas. The bottom-up approach aimed to begin with existing software and iteratively improve existing solutions to reach essentially the same outcome. These competing approaches are now coexisting and stakeholders are collaborating on a common software core that can support both existing and future systems. This allows both approaches to proceed on different timescales. Furthermore, the common approach will improve interoperability and enable automated migration between systems. The collaborative approach is illustrated in the OpenCDMS Architecture .","title":"History"},{"location":"organisations/","text":"OpenCDMS for organisations \u00b6","title":"OpenCDMS for organisations"},{"location":"organisations/#opencdms-for-organisations","text":"","title":"OpenCDMS for organisations"},{"location":"overview/","text":"OpenCDMS \u00b6 Working together to improve Climate Data Management Systems By 2030, we see a world where all nations, especially the most vulnerable, are more resilient to the socioeconomic consequences of extreme weather, climate, water and other environmental events; and underpin their sustainable development through the best possible services, whether over land, at sea or in the air -- WMO Vision * * World Meteorological Congress. Abridged Final Report of the Eighteenth Session. WMO-No. 1236 , page 12. WMO Geneva","title":"Overview"},{"location":"overview/#opencdms","text":"Working together to improve Climate Data Management Systems By 2030, we see a world where all nations, especially the most vulnerable, are more resilient to the socioeconomic consequences of extreme weather, climate, water and other environmental events; and underpin their sustainable development through the best possible services, whether over land, at sea or in the air -- WMO Vision * * World Meteorological Congress. Abridged Final Report of the Eighteenth Session. WMO-No. 1236 , page 12. WMO Geneva","title":"OpenCDMS"},{"location":"users/","text":"OpenCDMS for users \u00b6","title":"OpenCDMS for users"},{"location":"users/#opencdms-for-users","text":"","title":"OpenCDMS for users"},{"location":"approach/acp_project/","text":"ACP Project \u00b6 In early 2020, the OpenCDMS project received four and a half years of basic funding as part of the Intra-ACP Climate Services and Related Applications project. Activity 2.4 of the ACP funding aims to enhance climate data management and related applications and to establish and strengthen CDMSs in African, Caribbean and Pacific (ACP) countries. The activity is further broken into four parts: 2.4.1 Develop recommendations regarding sustainable CDMS requirements for developing country NMHSs; 2.4.2 Design and test an Open Source CDMS; 2.4.3 Support the implementation of a CDMS in the seven regional focus countries; providing limited equipment at the country level in the seven regional focus countries to support implementation of a CDMS; 2.4.4 Conduct seven regional training events on CDMS so the RCCs may support implementation of the Open Source CDMS at the national level. The requirements gathering exercise in activity 2.4.1 has been completed by the OpenCDMS ACP Project Requirements Working Group Initial work to design and test an Open Source CDMS for activity 2.4.2 has begun in the Project Technical Team (PTT) with responsibility for delivery falling to different working groups therein.","title":"ACP Project"},{"location":"approach/acp_project/#acp-project","text":"In early 2020, the OpenCDMS project received four and a half years of basic funding as part of the Intra-ACP Climate Services and Related Applications project. Activity 2.4 of the ACP funding aims to enhance climate data management and related applications and to establish and strengthen CDMSs in African, Caribbean and Pacific (ACP) countries. The activity is further broken into four parts: 2.4.1 Develop recommendations regarding sustainable CDMS requirements for developing country NMHSs; 2.4.2 Design and test an Open Source CDMS; 2.4.3 Support the implementation of a CDMS in the seven regional focus countries; providing limited equipment at the country level in the seven regional focus countries to support implementation of a CDMS; 2.4.4 Conduct seven regional training events on CDMS so the RCCs may support implementation of the Open Source CDMS at the national level. The requirements gathering exercise in activity 2.4.1 has been completed by the OpenCDMS ACP Project Requirements Working Group Initial work to design and test an Open Source CDMS for activity 2.4.2 has begun in the Project Technical Team (PTT) with responsibility for delivery falling to different working groups therein.","title":"ACP Project"},{"location":"approach/architecture/","text":"Architecture \u00b6 The system can be viewed as following a three-tier architecture with data, application and presentation layers. However, with the main OpenCDMS core at the centre, APIs present between layers and the separation of reusable processes on the right-hand side, the approach can also be viewed as a hexagonal architecture. The architecture follows the principle aims of the project: Improve interoperability among existing CDMSs With many CDMSs in use around the world, currently a lot of effort is spent duplicating similar capabilities in multiple systems. The OpenCDMS Data API is intended to allow interoperability among supported systems. This will allow processes to work with multiple supported databases/CDMSs. Create a Reference Implementation for a fully-compliant next-generation CDMS (with guidance from expert teams and a broad range of implementers) OpenCDMS does not aim to force changes on existing CDMS systems. However, one essential outcome for the project is to ensure that users have access to a CDMS that has full support for the WMO CDMS Specifications and follows best practices as they emerge from expert teams. Therefore, in addition to supporting multiple existing systems, OpenCDMS aims to also be the Reference Implementation for emerging standards and best practice. Work to support, and collaborate with, existing projects with the intention of ensuring CDMS users continue to benefit from existing support structures, software and services OpenCDMS does not aim to replace existing CDMSs. Rather, the project aims to support, and collaborate with, existing projects to ensure that users have access to the best possible solutions that meet their specific requirements. Data Layer \u00b6 CLIDATA, CliDE, Climsoft and MCH are all essential CDMS solutions that are used extensively in developing countries. It is essential for the OpenCDMS project to support these projects and their users where possible. MIDAS and OSCAR have been included because they bring additional capabilities and considerations for the OpenCDMS project. MIDAS is a custom CDMS developed and used by the UK Met Office. The system is of particular interest to OpenCDMS because extensive datasets, with rich and complete metadata, are available as open data. The OSCAR/Surface system is the WMO\u2019s official repository of WIGOS metadata for all surface-based observing stations and platforms. Ensuring full support of the WIGOS metadata standard will help with the creation of the future Reference Implementation. It is important to note that all of the business logic required to work with each of the supported CDMSs will be implemented in adapters for the Data API. This is necessary to ensure the integrity of each system is protected. It is anticipate that OpenCDMS may only implement partial, or read-only, access to some of the supported systems. Application Layer \u00b6 In addition to new code that is unique to OpenCDMS, the architecture also supports and encourages the reuse of products and services from existing systems through the Process API . The intention is that existing processes can be used without modification. The OpenCDMS process library creates a wrapper around supported processes to enable them to interact with all CDMSs that are supported through the Data API. In addition, OpenCDMS also maintains automated tests to ensure that each reused process that operates as a \u201cblack-box\u201d is working as expected. Presentation Layer \u00b6 All capabilities in the presentation layer will operate through the supported APIs. The previously discussed Process and Data APIs are being implemented in the Python programming language. Although it is not expected that the average CDMS user would make direct use of these interfaces, they are available for advanced users and are useful for activities like bespoke data analysis. In addition, OpenCDMS will support multiple Web APIs. In the short-term, the project will develop, or adopt, a Web API that is intended simply for use by the OpenCDMS user interface. However, in the future the intention is to also support other API standards including the Open Geospatial Consortium Environmental Data Retrieval API (OGC API \u2013 EDR) and also a CDMS Reference API Standard if this is created alongside the CDMS Reference Implementation data model.","title":"Architecture"},{"location":"approach/architecture/#architecture","text":"The system can be viewed as following a three-tier architecture with data, application and presentation layers. However, with the main OpenCDMS core at the centre, APIs present between layers and the separation of reusable processes on the right-hand side, the approach can also be viewed as a hexagonal architecture. The architecture follows the principle aims of the project: Improve interoperability among existing CDMSs With many CDMSs in use around the world, currently a lot of effort is spent duplicating similar capabilities in multiple systems. The OpenCDMS Data API is intended to allow interoperability among supported systems. This will allow processes to work with multiple supported databases/CDMSs. Create a Reference Implementation for a fully-compliant next-generation CDMS (with guidance from expert teams and a broad range of implementers) OpenCDMS does not aim to force changes on existing CDMS systems. However, one essential outcome for the project is to ensure that users have access to a CDMS that has full support for the WMO CDMS Specifications and follows best practices as they emerge from expert teams. Therefore, in addition to supporting multiple existing systems, OpenCDMS aims to also be the Reference Implementation for emerging standards and best practice. Work to support, and collaborate with, existing projects with the intention of ensuring CDMS users continue to benefit from existing support structures, software and services OpenCDMS does not aim to replace existing CDMSs. Rather, the project aims to support, and collaborate with, existing projects to ensure that users have access to the best possible solutions that meet their specific requirements.","title":"Architecture"},{"location":"approach/architecture/#data-layer","text":"CLIDATA, CliDE, Climsoft and MCH are all essential CDMS solutions that are used extensively in developing countries. It is essential for the OpenCDMS project to support these projects and their users where possible. MIDAS and OSCAR have been included because they bring additional capabilities and considerations for the OpenCDMS project. MIDAS is a custom CDMS developed and used by the UK Met Office. The system is of particular interest to OpenCDMS because extensive datasets, with rich and complete metadata, are available as open data. The OSCAR/Surface system is the WMO\u2019s official repository of WIGOS metadata for all surface-based observing stations and platforms. Ensuring full support of the WIGOS metadata standard will help with the creation of the future Reference Implementation. It is important to note that all of the business logic required to work with each of the supported CDMSs will be implemented in adapters for the Data API. This is necessary to ensure the integrity of each system is protected. It is anticipate that OpenCDMS may only implement partial, or read-only, access to some of the supported systems.","title":"Data Layer"},{"location":"approach/architecture/#application-layer","text":"In addition to new code that is unique to OpenCDMS, the architecture also supports and encourages the reuse of products and services from existing systems through the Process API . The intention is that existing processes can be used without modification. The OpenCDMS process library creates a wrapper around supported processes to enable them to interact with all CDMSs that are supported through the Data API. In addition, OpenCDMS also maintains automated tests to ensure that each reused process that operates as a \u201cblack-box\u201d is working as expected.","title":"Application Layer"},{"location":"approach/architecture/#presentation-layer","text":"All capabilities in the presentation layer will operate through the supported APIs. The previously discussed Process and Data APIs are being implemented in the Python programming language. Although it is not expected that the average CDMS user would make direct use of these interfaces, they are available for advanced users and are useful for activities like bespoke data analysis. In addition, OpenCDMS will support multiple Web APIs. In the short-term, the project will develop, or adopt, a Web API that is intended simply for use by the OpenCDMS user interface. However, in the future the intention is to also support other API standards including the Open Geospatial Consortium Environmental Data Retrieval API (OGC API \u2013 EDR) and also a CDMS Reference API Standard if this is created alongside the CDMS Reference Implementation data model.","title":"Presentation Layer"},{"location":"approach/cloud/","text":"OpenCDMS Cloud \u00b6 The WMO technical commissions are mandated to promote the development of systems that \u201cmake use of and promote public-private engagement where advantageous\u201d. To date, the OpenWIS Association\u2019s primary purpose has been the management of open source software development. However, the association seem supportive of the OpenCDMS Project\u2019s ambitions to work closely with large cloud providers to provide a non-for-profit production-ready implementation of the service. OpenCDMS Cloud would be a separate and parallel activity to the OpenCDMS software project. Instead of organisations facing a bewildering and fragmented array of service options with many commercial providers, the OpenCDMS Project intends to explore the option of working with one or more cloud providers to provide a centrally managed solution. Commercial partners would be welcome to help develop and support this central solution, but would work under terms set by the project. An OpenCDMS Cloud solution would go beyond the capabilities of the OpenCDMS open-source software solution by offering enterprise-grade production-ready solutions including additional security, monitoring/analytics, scalability and API management.","title":"OpenCDMS Cloud"},{"location":"approach/cloud/#opencdms-cloud","text":"The WMO technical commissions are mandated to promote the development of systems that \u201cmake use of and promote public-private engagement where advantageous\u201d. To date, the OpenWIS Association\u2019s primary purpose has been the management of open source software development. However, the association seem supportive of the OpenCDMS Project\u2019s ambitions to work closely with large cloud providers to provide a non-for-profit production-ready implementation of the service. OpenCDMS Cloud would be a separate and parallel activity to the OpenCDMS software project. Instead of organisations facing a bewildering and fragmented array of service options with many commercial providers, the OpenCDMS Project intends to explore the option of working with one or more cloud providers to provide a centrally managed solution. Commercial partners would be welcome to help develop and support this central solution, but would work under terms set by the project. An OpenCDMS Cloud solution would go beyond the capabilities of the OpenCDMS open-source software solution by offering enterprise-grade production-ready solutions including additional security, monitoring/analytics, scalability and API management.","title":"OpenCDMS Cloud"},{"location":"approach/glossary/","text":"Glossary \u00b6 API \u00b6 Unless otherwise stated, Application Programming Interface (API) refers to a Web REST API that follows the OpenAPI specification. https://www.openapis.org/ Climate \u00b6 In the context of Climate Data Management Systems (CDMS), the term \u201cclimate\u201d is considered to capture a very broad range of environmental variables, e.g. the GCOS Essential Climate Variables (ECVs) https://gcos.wmo.int/en/essential-climate-variables Design pattern \u00b6 Design patterns provide reusable solutions to common software design problems. Design patterns are like reusable templates that can be applied to solve real-world problems. https://en.wikipedia.org/wiki/Design_Patterns Framework \u00b6 Unless otherwise specified, framework refers to a web application framework. This includes both client-side Javascript web frameworks and server-side web frameworks. Frameworks differ from software libraries by utilising inversion of control. https://en.wikipedia.org/wiki/Web_framework Grammar \u00b6 Leland Wilkinson. The Grammar of Graphics, Springer, 1999 https://www.springer.com/gp/book/9780387245447 Library API \u00b6 Unlike a Web API, a Library API describes the interface to a software library. This prescribes the behaviour that is expected when using the public classes and methods of the software. https://en.wikipedia.org/wiki/API#Libraries_and_frameworks Open \u00b6 In the context of OpenCDMS, the term \u201copen\u201d primarily refers to the creation and adoption of open standards for the management and exchange of data. However, the project is also creating open-source software (as defined by the Open Source Initiative in the Open Source Definition ) as well as promoting open data. https://en.wikipedia.org/wiki/Open_standard Process \u00b6 Within the OpenCDMS project, the term process is used to refer to an isolated, reusable and testable module of code. Each process can be treated as a black box, where the implementation does not need to be known, as long as the process behaves as defined in it\u2019s documentation (docstring) and passes the related automated tests. In OpenCDMS, processes allow the reuse of capabilities from external systems without requiring these to be rewritten. http://docs.opengeospatial.org/is/14-065/14-065.html#7 Product owner \u00b6 The product owner manages the product backlog (the work items to be undertaken) and prioritises these in order to achieve the goals and deliver the maximum possible value. https://www.scrum.org/resources/what-is-a-product-owner","title":"Glossary"},{"location":"approach/glossary/#glossary","text":"","title":"Glossary"},{"location":"approach/glossary/#api","text":"Unless otherwise stated, Application Programming Interface (API) refers to a Web REST API that follows the OpenAPI specification. https://www.openapis.org/","title":"API"},{"location":"approach/glossary/#climate","text":"In the context of Climate Data Management Systems (CDMS), the term \u201cclimate\u201d is considered to capture a very broad range of environmental variables, e.g. the GCOS Essential Climate Variables (ECVs) https://gcos.wmo.int/en/essential-climate-variables","title":"Climate"},{"location":"approach/glossary/#design-pattern","text":"Design patterns provide reusable solutions to common software design problems. Design patterns are like reusable templates that can be applied to solve real-world problems. https://en.wikipedia.org/wiki/Design_Patterns","title":"Design pattern"},{"location":"approach/glossary/#framework","text":"Unless otherwise specified, framework refers to a web application framework. This includes both client-side Javascript web frameworks and server-side web frameworks. Frameworks differ from software libraries by utilising inversion of control. https://en.wikipedia.org/wiki/Web_framework","title":"Framework"},{"location":"approach/glossary/#grammar","text":"Leland Wilkinson. The Grammar of Graphics, Springer, 1999 https://www.springer.com/gp/book/9780387245447","title":"Grammar"},{"location":"approach/glossary/#library-api","text":"Unlike a Web API, a Library API describes the interface to a software library. This prescribes the behaviour that is expected when using the public classes and methods of the software. https://en.wikipedia.org/wiki/API#Libraries_and_frameworks","title":"Library API"},{"location":"approach/glossary/#open","text":"In the context of OpenCDMS, the term \u201copen\u201d primarily refers to the creation and adoption of open standards for the management and exchange of data. However, the project is also creating open-source software (as defined by the Open Source Initiative in the Open Source Definition ) as well as promoting open data. https://en.wikipedia.org/wiki/Open_standard","title":"Open"},{"location":"approach/glossary/#process","text":"Within the OpenCDMS project, the term process is used to refer to an isolated, reusable and testable module of code. Each process can be treated as a black box, where the implementation does not need to be known, as long as the process behaves as defined in it\u2019s documentation (docstring) and passes the related automated tests. In OpenCDMS, processes allow the reuse of capabilities from external systems without requiring these to be rewritten. http://docs.opengeospatial.org/is/14-065/14-065.html#7","title":"Process"},{"location":"approach/glossary/#product-owner","text":"The product owner manages the product backlog (the work items to be undertaken) and prioritises these in order to achieve the goals and deliver the maximum possible value. https://www.scrum.org/resources/what-is-a-product-owner","title":"Product owner"},{"location":"approach/governance/","text":"Project Structure and Governance \u00b6 The OpenCDMS Project Management Committee (PMC) was established in September 2020. At this time all members of the original OpenCDMS community automatically joined the Project Advisory Team. The Project Advisory Team (PAT) provides an interface to external communities. The Project Technical Team (PTT) takes requirements, works on the software design and oversees the implementation. The Project Management Committee performs a mediation role, resolving any disputes that may arise and reporting progress to the OpenWIS Association The high-level teams hold overall accountability for the success of the project and software, but much of the responsibility for specific outcomes is handled within sub-groups and working groups. This ensures that tasks and responsibilities are well-defined.","title":"Project Structure and Governance"},{"location":"approach/governance/#project-structure-and-governance","text":"The OpenCDMS Project Management Committee (PMC) was established in September 2020. At this time all members of the original OpenCDMS community automatically joined the Project Advisory Team. The Project Advisory Team (PAT) provides an interface to external communities. The Project Technical Team (PTT) takes requirements, works on the software design and oversees the implementation. The Project Management Committee performs a mediation role, resolving any disputes that may arise and reporting progress to the OpenWIS Association The high-level teams hold overall accountability for the success of the project and software, but much of the responsibility for specific outcomes is handled within sub-groups and working groups. This ensures that tasks and responsibilities are well-defined.","title":"Project Structure and Governance"},{"location":"approach/principle-aims/","text":"Principle aims \u00b6 Improve interoperability among existing CDMSs Create a Reference Implementation for a fully-compliant next-generation CDMS (with guidance from expert teams and a broad range of implementers) Work to support, and collaborate with, existing projects with the intention of ensuring CDMS users continue to benefit from existing support structures, software and services In addition, OpenCDMS will continue to follow the principles set out in the terms of reference for WMO technical commissions * , ensuring that solutions: Are user-driven and provide Earth system observations, processed data and relevant services, products and information to Members; Are applicable, accessible and with life-cycle management across the full range of WMO Members; Are built on a modular and scalable principle to the extent possible; Make full use of existing WMO and other relevant standards and regulations; Make use of and promote public-private engagement where advantageous; Incorporate state-of-the-art optimal and fit-for-purpose technology; Are based on user requirements developed in coordination with the Services Commission and the Research Board; Are building upon existing partnerships and networks among communities of practice within the service areas, which are beneficial for WMO Members. * World Meteorological Congress. Abridged Final Report of the Eighteenth Session. WMO-No. 1236, resolution 22 page 88. WMO Geneva","title":"Principle aims"},{"location":"approach/principle-aims/#principle-aims","text":"Improve interoperability among existing CDMSs Create a Reference Implementation for a fully-compliant next-generation CDMS (with guidance from expert teams and a broad range of implementers) Work to support, and collaborate with, existing projects with the intention of ensuring CDMS users continue to benefit from existing support structures, software and services In addition, OpenCDMS will continue to follow the principles set out in the terms of reference for WMO technical commissions * , ensuring that solutions: Are user-driven and provide Earth system observations, processed data and relevant services, products and information to Members; Are applicable, accessible and with life-cycle management across the full range of WMO Members; Are built on a modular and scalable principle to the extent possible; Make full use of existing WMO and other relevant standards and regulations; Make use of and promote public-private engagement where advantageous; Incorporate state-of-the-art optimal and fit-for-purpose technology; Are based on user requirements developed in coordination with the Services Commission and the Research Board; Are building upon existing partnerships and networks among communities of practice within the service areas, which are beneficial for WMO Members. * World Meteorological Congress. Abridged Final Report of the Eighteenth Session. WMO-No. 1236, resolution 22 page 88. WMO Geneva","title":"Principle aims"},{"location":"approach/roadmap/","text":"Roadmap \u00b6 This section contains the current draft roadmap for the OpenCDMS Project until 2030. Year Tasks 2020 Key outcomes: - OpenCDMS architecture agreed - Data and Process API approach demonstrated - Process Library Framework created with automated tests and support for documentation generation from docstrings - High-level Data model review drafted 2021 H1 User stories, functional requirements & acceptance tests for existing CDMSs Additional processes with docs & tests, engagement with other projects H2 Progress with Web API and initial web components for user interface 2022 User interface 2023 Q1 Begin hardware procurement for ACP Project focus countries Q2 OpenCDMS proven \u201cviable\u201d by June 2023 \u2013 Cg-19 Congress Q3 Begin in-county implementation/training for ACP Project 2024 Q1 Complete in-county implementation/training for ACP Project Q2 June 2024 \u2013 ACP project ends Q3 (ACP Project possible no-cost extension) 2025 H1 General availability 2026 Initial OpenCDMS Cloud service available 2020 Help to realise the WMO Vision: \u201cBy 2030, we see a world where all nations, especially the most vulnerable, are more resilient to the socioeconomic consequences of extreme weather, climate, water and other environmental events; and underpin their sustainable development through the best possible services, whether over land, at sea or in the air\u201d","title":"Roadmap"},{"location":"approach/roadmap/#roadmap","text":"This section contains the current draft roadmap for the OpenCDMS Project until 2030. Year Tasks 2020 Key outcomes: - OpenCDMS architecture agreed - Data and Process API approach demonstrated - Process Library Framework created with automated tests and support for documentation generation from docstrings - High-level Data model review drafted 2021 H1 User stories, functional requirements & acceptance tests for existing CDMSs Additional processes with docs & tests, engagement with other projects H2 Progress with Web API and initial web components for user interface 2022 User interface 2023 Q1 Begin hardware procurement for ACP Project focus countries Q2 OpenCDMS proven \u201cviable\u201d by June 2023 \u2013 Cg-19 Congress Q3 Begin in-county implementation/training for ACP Project 2024 Q1 Complete in-county implementation/training for ACP Project Q2 June 2024 \u2013 ACP project ends Q3 (ACP Project possible no-cost extension) 2025 H1 General availability 2026 Initial OpenCDMS Cloud service available 2020 Help to realise the WMO Vision: \u201cBy 2030, we see a world where all nations, especially the most vulnerable, are more resilient to the socioeconomic consequences of extreme weather, climate, water and other environmental events; and underpin their sustainable development through the best possible services, whether over land, at sea or in the air\u201d","title":"Roadmap"},{"location":"groups/project_advisory_team/","text":"Chair: Peer Hechler Responsibilities \u00b6 The Project Advisory Team (PAT) is comparable to a stakeholder group. The team represents users and the wider membership and advises on project activities and coordination. The terms of reference for the PAT have not yet been defined but are likely to include: Advising the Project Management Committee on matters concerning strategy and governance Reviewing policies and practices of partner organisations and reporting how these impact on the project Determining metrics to measure the success of the project and monitoring progress against metrics Ensuring that all activities align with the project\u2019s principles and objectives Sub-groups \u00b6 Communications sub-group (COMMS-SG) The following additional sub-groups have been proposed: Collaborations sub-group (COLLAB-SG) Web site sub-group (WEB-SG) Working groups \u00b6 ACP Requirements Working Group (APREQ-WG)","title":"Project advisory team"},{"location":"groups/project_advisory_team/#responsibilities","text":"The Project Advisory Team (PAT) is comparable to a stakeholder group. The team represents users and the wider membership and advises on project activities and coordination. The terms of reference for the PAT have not yet been defined but are likely to include: Advising the Project Management Committee on matters concerning strategy and governance Reviewing policies and practices of partner organisations and reporting how these impact on the project Determining metrics to measure the success of the project and monitoring progress against metrics Ensuring that all activities align with the project\u2019s principles and objectives","title":"Responsibilities"},{"location":"groups/project_advisory_team/#sub-groups","text":"Communications sub-group (COMMS-SG) The following additional sub-groups have been proposed: Collaborations sub-group (COLLAB-SG) Web site sub-group (WEB-SG)","title":"Sub-groups"},{"location":"groups/project_advisory_team/#working-groups","text":"ACP Requirements Working Group (APREQ-WG)","title":"Working groups"},{"location":"groups/project_management_committee/","text":"Chair (ad interim) : Peer Hechler - September 2020 to September 2021 The terms of reference for the Project Management Committee are established in the OpenCDMS Project Charter (see \"Functions of PMC\" . Members of the Project Management Committee are also members of the Project Advisory Team. Membership of the PMC will be reviewed at least annually. The initial Project Management Committee is comprised of: Role Name WMO Secretariat and Project Advisory Team representative Peer Hechler (deputy Nirina Ravalitera) OpenWIS Association representative and member of WMO INFCOM (SC-IMT) Jeremy Tandy Member of WMO SERCOM (ET-DRC) Denis Stuber Project Technical Team representative Ian Edwards CDMS user representative Steve Palmer Hydrology User representative Vasco Stojov Future Project Stakeholder Group representative Vacant","title":"Project management committee"},{"location":"groups/project_technical_team/","text":"Chair: Ian Edwards Overview \u00b6 The remit of the Project Technical Team (PTT) is to oversee the development of the OpenCDMS software. The chair of the PTT is expected to take on the role of Product Owner (see glossary on page 24). This includes managing the project backlog. The PTT does not necessarily have the resources to undertake all of the necessary software implementation, but the team is expected to develop prototypes and demonstrations and to keep the development moving forwards. In line with the OpenWIS Association AISBL, during times when development resource is limited, the team will follow the Kanban agile process . At times when additional dedicated team(s) are available to work continuously on the software then the main development will follow the scrum agile process with code development sprints. Responsibilities \u00b6 Manage the agile development process including owning the product backlog Requirements management Technical design and architecture Current Deliverables \u00b6 OpenCDMS software architecture (December 2020) Coordination of development work including application of project management elements (continuous communication, reporting, documentation, risk assessment) Guide contributors in the use of collaboration tools (Git source control software, GitHub) and agile software engineering practices","title":"Project technical team"},{"location":"groups/project_technical_team/#overview","text":"The remit of the Project Technical Team (PTT) is to oversee the development of the OpenCDMS software. The chair of the PTT is expected to take on the role of Product Owner (see glossary on page 24). This includes managing the project backlog. The PTT does not necessarily have the resources to undertake all of the necessary software implementation, but the team is expected to develop prototypes and demonstrations and to keep the development moving forwards. In line with the OpenWIS Association AISBL, during times when development resource is limited, the team will follow the Kanban agile process . At times when additional dedicated team(s) are available to work continuously on the software then the main development will follow the scrum agile process with code development sprints.","title":"Overview"},{"location":"groups/project_technical_team/#responsibilities","text":"Manage the agile development process including owning the product backlog Requirements management Technical design and architecture","title":"Responsibilities"},{"location":"groups/project_technical_team/#current-deliverables","text":"OpenCDMS software architecture (December 2020) Coordination of development work including application of project management elements (continuous communication, reporting, documentation, risk assessment) Guide contributors in the use of collaboration tools (Git source control software, GitHub) and agile software engineering practices","title":"Current Deliverables"},{"location":"groups/sub-group/comms-sg/","text":"Communications Sub-group (COMMS-SG) \u00b6 Co-ordinator: Karen McCourt Current Deliverables: \u00b6 Communications plan (April 2020) Initial website contents including FAQs (April 2020) Communications plan \u00b6 The draft Communications Plan and Frequently Asked Questions documents were reviewed in the Project Advisory Team meeting on Wednesday 27th January 2021 . Following further review, these will be made available via the OpenCDMS website and further communications activities will be agreed. Initial website contents (including FAQs) \u00b6 The original OpenCDMS website contained a single placeholder page that was not updated regularly. A new approach to the website was agreed during the discussions on communication strategy. The website will be separated into five top level sections which aim to aid navigation for visitors. These sections are: \u201cAbout\u201d, \u201cfor users\u201d, \u201cfor organisations\u201d, \u201cfor developers\u201d and \u201cfor experts\u201d. Content may be accessible via multiple navigation pathways or may be customised depending on section.","title":"Communications Sub-group (COMMS-SG)"},{"location":"groups/sub-group/comms-sg/#communications-sub-group-comms-sg","text":"Co-ordinator: Karen McCourt","title":"Communications Sub-group (COMMS-SG)"},{"location":"groups/sub-group/comms-sg/#current-deliverables","text":"Communications plan (April 2020) Initial website contents including FAQs (April 2020)","title":"Current Deliverables:"},{"location":"groups/sub-group/comms-sg/#communications-plan","text":"The draft Communications Plan and Frequently Asked Questions documents were reviewed in the Project Advisory Team meeting on Wednesday 27th January 2021 . Following further review, these will be made available via the OpenCDMS website and further communications activities will be agreed.","title":"Communications plan"},{"location":"groups/sub-group/comms-sg/#initial-website-contents-including-faqs","text":"The original OpenCDMS website contained a single placeholder page that was not updated regularly. A new approach to the website was agreed during the discussions on communication strategy. The website will be separated into five top level sections which aim to aid navigation for visitors. These sections are: \u201cAbout\u201d, \u201cfor users\u201d, \u201cfor organisations\u201d, \u201cfor developers\u201d and \u201cfor experts\u201d. Content may be accessible via multiple navigation pathways or may be customised depending on section.","title":"Initial website contents (including FAQs)"},{"location":"groups/working-group/apreq-wg/","text":"ACP Project Requirements Working Group (APREQ-WG) \u00b6 Terminated Co-ordinator: William Wright Terminate date \u00b6 December 2020 (ended) Deliverables \u00b6 Recommendations on specific country-focused CDMS requirements in ACP countries (December 2020) Recommendations on specific country-focused CDMS requirements \u00b6 Members of the working group performed two rounds of consultations for African, Caribbean and Pacific regions. The initiative received a lot of engagement and feedback. Users requested support for current CDMSs and also highlighted the importance of data rescue and the need for native language communication in relation to CDMS-relevant training and capacity development. The requirements arising from activity 2.4.1 will be considered as part of the OpenCDMS software development.","title":"ACP Project Requirements Working Group (APREQ-WG)"},{"location":"groups/working-group/apreq-wg/#acp-project-requirements-working-group-apreq-wg","text":"Terminated Co-ordinator: William Wright","title":"ACP Project Requirements Working Group (APREQ-WG)"},{"location":"groups/working-group/apreq-wg/#terminate-date","text":"December 2020 (ended)","title":"Terminate date"},{"location":"groups/working-group/apreq-wg/#deliverables","text":"Recommendations on specific country-focused CDMS requirements in ACP countries (December 2020)","title":"Deliverables"},{"location":"groups/working-group/apreq-wg/#recommendations-on-specific-country-focused-cdms-requirements","text":"Members of the working group performed two rounds of consultations for African, Caribbean and Pacific regions. The initiative received a lot of engagement and feedback. Users requested support for current CDMSs and also highlighted the importance of data rescue and the need for native language communication in relation to CDMS-relevant training and capacity development. The requirements arising from activity 2.4.1 will be considered as part of the OpenCDMS software development.","title":"Recommendations on specific country-focused CDMS requirements"},{"location":"groups/working-group/dmr-wg/","text":"Data Model Review - Working Group (DMR-WG) \u00b6 Terminated Co-ordinator: Ian Edwards Terminate date \u00b6 December 2020 (ended) Deliverables \u00b6 Identify components of the WMO CDMS specifications that require provisions to be present within data models Collating data models from existing CDMSs In-depth review of existing data models including recommendations for next generation (climate) data models The primary output from the Data Model Review Working Group has been the data model review . Additional work has been undertaken, for example collaring data models from existing CDMSs, but this has not yet been added online.","title":"Data Model Review - Working Group (DMR-WG)"},{"location":"groups/working-group/dmr-wg/#data-model-review-working-group-dmr-wg","text":"Terminated Co-ordinator: Ian Edwards","title":"Data Model Review - Working Group (DMR-WG)"},{"location":"groups/working-group/dmr-wg/#terminate-date","text":"December 2020 (ended)","title":"Terminate date"},{"location":"groups/working-group/dmr-wg/#deliverables","text":"Identify components of the WMO CDMS specifications that require provisions to be present within data models Collating data models from existing CDMSs In-depth review of existing data models including recommendations for next generation (climate) data models The primary output from the Data Model Review Working Group has been the data model review . Additional work has been undertaken, for example collaring data models from existing CDMSs, but this has not yet been added online.","title":"Deliverables"},{"location":"groups/working-group/dms-wg/","text":"Data Model Standard - Working Group (DMS-WG) \u00b6 Co-ordinator: Denis Stuber Terminate date \u00b6 December 2024 Deliverables \u00b6 2021 - 2022 2023 - 2024 User stories, functional requirements and acceptance tests for reference implementation OpenCDMS reference implementation presented to 19th World Meteorological Congress for endorsement Development of a next generation data model to be adopted as a WMO standard CDMS data model to be endorsed by Cg-19","title":"Data Model Standard - Working Group (DMS-WG)"},{"location":"groups/working-group/dms-wg/#data-model-standard-working-group-dms-wg","text":"Co-ordinator: Denis Stuber","title":"Data Model Standard - Working Group (DMS-WG)"},{"location":"groups/working-group/dms-wg/#terminate-date","text":"December 2024","title":"Terminate date"},{"location":"groups/working-group/dms-wg/#deliverables","text":"2021 - 2022 2023 - 2024 User stories, functional requirements and acceptance tests for reference implementation OpenCDMS reference implementation presented to 19th World Meteorological Congress for endorsement Development of a next generation data model to be adopted as a WMO standard CDMS data model to be endorsed by Cg-19","title":"Deliverables"},{"location":"groups/working-group/ipl-wg/","text":"Initial Process Library - Working Group (IPL-WG) \u00b6 Co-ordinator: Ian Edwards Terminate date \u00b6 December 2020 (extended) December 2021 Deliverables \u00b6 Listing processes in order to improve awareness among the teams Agreeing a set of core processes for an OpenCDMS process catalogue Describing the core processes, including docstrings and parameterisation Identifying suitable test data for use in automated tests Writing automated tests to guarantee that processes are working as expected The process library framework is in place, including methodologies to enable automated documentation generation from docstrings and an automated testing framework using the Python tox and pytest tools. The approach taken was influenced by discussions with the developers of CliDEsc, a system that compliments CliDE CDMS by providing additional products and services. OpenCDMS has followed CliDEsc by adopting the Pandas data analysis library and the Pandas DataFrame as the primary data type for managing data within Python. Process Catalog \u00b6 The working group successfully identified reusable processes from Climatol, R-Instat, Climsoft and MCH and documented these in the initial process library catalog . At the end of December 2020 the implementation only includes one process from Climatol and a single process from R-Instat. However, the route ahead from this point is well established. The delay with R-Instat was in part due to a misunderstanding of the architecture of the software. It emerged during discussions that the front-end, written in Visual Basic .NET, and back-end which uses R are very tightly coupled . The working group also experienced some difficulties with sharing MCH code. The process library provides the most compelling example of where OpenCDMS can add additional value to existing CDMSs and, for this reason, implementing additional processes will continue to be a high priority going forwards. The suggested aim in 2021 is to ensure that at least one additional process is added to the implementation each month from February onwards. The project must work hard to continue to support the involvement of R-Instat, MCH and other collaborators in the project. The OpenCDMS process catalog is currently hidden in an Excel document on SharePoint. The contents should be moved to a more publicly accessible place and will be used to inform user stories for processes in the near future. Grammar \u00b6 The collection of processes that are made available through the OpenCDMS process library should not be created with ad hoc interfaces. Instead there should be a common structure, or grammar, that applies to all processes. The Initial Process Library Working Group (IPL-WG) is building on the ideas established by the Grammar of Graphics to construct the process library API ( Wilkinson 1999 ). The approach being developed for OpenCDMS builds on the Grammar of Graphics function chain and wraps this with the Extract, Transform, Load (ETL) design pattern . Constructed as a function chain, member functions within each class are interchangeable, however the classes must be applied in order. An overview of the OpenCDMS process grammar is presented below. Extract \u00b6 The extract step is concerned with the extraction of data from the CDMS using a common interface. For systems that fully implement the WMO Climate Data Management System Specifications the extraction of versioned data will be possible. That is to say, we should be able to ask for the version of the data that would have been returned if the query had been made on a specific date (data may vary depending on quality control processes). Transform \u00b6 The transform step in the chain corresponds closely to the original four classes in the Grammar of Graphics. This may involve reshaping the data and transforming variable (e.g. converting a date into the corresponding value for the day in year, or creating a summary statistic). The initial transform steps will often be performed once and then the resulting transformed data will be reused for multiple processes. Process \u00b6 The final three classes from Grammar of Graphics allow the creation of very diverse graphical outputs. It\u2019s not clear whether the process API will expose this capability directly to users. However, we aspire to allow this level of flexibility to internal OpenCDMS processes to enable a very broad range of capabilities in addition to a taxonomy of processes. Load \u00b6 The final Load stage determines what happens to the generated output, this may be as simple as displaying a graph, writing an image or tabular data to a file, adding the product to a message queue to be emailed or writing quality controlled data back to the CDMS. The OpenCDMS library should support lazy loading of data, working with a data definition without loading the data payload. It should be possible to perform operations like observations.count() without retrieving all of the data. Similarly print(observations) may only require a paginated subset to be retrieved. Supported libraries \u00b6 In addition to R-Instat and MCH, the intention is to add support for CliDEsc processes and to also rewrite many Climsoft core processes and make these accessible via JavaScript.","title":"Initial Process Library - Working Group (IPL-WG)"},{"location":"groups/working-group/ipl-wg/#initial-process-library-working-group-ipl-wg","text":"Co-ordinator: Ian Edwards","title":"Initial Process Library - Working Group (IPL-WG)"},{"location":"groups/working-group/ipl-wg/#terminate-date","text":"December 2020 (extended) December 2021","title":"Terminate date"},{"location":"groups/working-group/ipl-wg/#deliverables","text":"Listing processes in order to improve awareness among the teams Agreeing a set of core processes for an OpenCDMS process catalogue Describing the core processes, including docstrings and parameterisation Identifying suitable test data for use in automated tests Writing automated tests to guarantee that processes are working as expected The process library framework is in place, including methodologies to enable automated documentation generation from docstrings and an automated testing framework using the Python tox and pytest tools. The approach taken was influenced by discussions with the developers of CliDEsc, a system that compliments CliDE CDMS by providing additional products and services. OpenCDMS has followed CliDEsc by adopting the Pandas data analysis library and the Pandas DataFrame as the primary data type for managing data within Python.","title":"Deliverables"},{"location":"groups/working-group/ipl-wg/#process-catalog","text":"The working group successfully identified reusable processes from Climatol, R-Instat, Climsoft and MCH and documented these in the initial process library catalog . At the end of December 2020 the implementation only includes one process from Climatol and a single process from R-Instat. However, the route ahead from this point is well established. The delay with R-Instat was in part due to a misunderstanding of the architecture of the software. It emerged during discussions that the front-end, written in Visual Basic .NET, and back-end which uses R are very tightly coupled . The working group also experienced some difficulties with sharing MCH code. The process library provides the most compelling example of where OpenCDMS can add additional value to existing CDMSs and, for this reason, implementing additional processes will continue to be a high priority going forwards. The suggested aim in 2021 is to ensure that at least one additional process is added to the implementation each month from February onwards. The project must work hard to continue to support the involvement of R-Instat, MCH and other collaborators in the project. The OpenCDMS process catalog is currently hidden in an Excel document on SharePoint. The contents should be moved to a more publicly accessible place and will be used to inform user stories for processes in the near future.","title":"Process Catalog"},{"location":"groups/working-group/ipl-wg/#grammar","text":"The collection of processes that are made available through the OpenCDMS process library should not be created with ad hoc interfaces. Instead there should be a common structure, or grammar, that applies to all processes. The Initial Process Library Working Group (IPL-WG) is building on the ideas established by the Grammar of Graphics to construct the process library API ( Wilkinson 1999 ). The approach being developed for OpenCDMS builds on the Grammar of Graphics function chain and wraps this with the Extract, Transform, Load (ETL) design pattern . Constructed as a function chain, member functions within each class are interchangeable, however the classes must be applied in order. An overview of the OpenCDMS process grammar is presented below.","title":"Grammar"},{"location":"groups/working-group/ipl-wg/#extract","text":"The extract step is concerned with the extraction of data from the CDMS using a common interface. For systems that fully implement the WMO Climate Data Management System Specifications the extraction of versioned data will be possible. That is to say, we should be able to ask for the version of the data that would have been returned if the query had been made on a specific date (data may vary depending on quality control processes).","title":"Extract"},{"location":"groups/working-group/ipl-wg/#transform","text":"The transform step in the chain corresponds closely to the original four classes in the Grammar of Graphics. This may involve reshaping the data and transforming variable (e.g. converting a date into the corresponding value for the day in year, or creating a summary statistic). The initial transform steps will often be performed once and then the resulting transformed data will be reused for multiple processes.","title":"Transform"},{"location":"groups/working-group/ipl-wg/#process","text":"The final three classes from Grammar of Graphics allow the creation of very diverse graphical outputs. It\u2019s not clear whether the process API will expose this capability directly to users. However, we aspire to allow this level of flexibility to internal OpenCDMS processes to enable a very broad range of capabilities in addition to a taxonomy of processes.","title":"Process"},{"location":"groups/working-group/ipl-wg/#load","text":"The final Load stage determines what happens to the generated output, this may be as simple as displaying a graph, writing an image or tabular data to a file, adding the product to a message queue to be emailed or writing quality controlled data back to the CDMS. The OpenCDMS library should support lazy loading of data, working with a data definition without loading the data payload. It should be possible to perform operations like observations.count() without retrieving all of the data. Similarly print(observations) may only require a paginated subset to be retrieved.","title":"Load"},{"location":"groups/working-group/ipl-wg/#supported-libraries","text":"In addition to R-Instat and MCH, the intention is to add support for CliDEsc processes and to also rewrite many Climsoft core processes and make these accessible via JavaScript.","title":"Supported libraries"},{"location":"groups/working-group/swa-wg/","text":"Simple Web API - Working Group (SWA-WG) \u00b6 Co-ordinator: (vacant) Terminate date \u00b6 December 2020 (extended) December 2022 Deliverables \u00b6 Document existing standards and implementations that impact on the design of the Web API (December 2020) Develop a complete specification for version 1.0 of the Web API (December 2022) The original plan was to complete the specification for version 1.0 of the Web API by December 2020. However, the project has focused instead on progressing the Data and Process library APIs that are being written in the Python programming language. Work on the Python APIs will inform the Web API. Existing standards and implementations that impact on the design of the OpenCDMS Web API are summarised below. Existing Web APIs \u00b6 CLIDATA CLIDATA is used extensively in developing countries and has a strong presence in both Central and West Africa and the Caribbean. During discussions with the CLIDATA team it was mentioned that CLIDATA already makes use of a Web API. Reuse of the CLIDATA Web API in OpenCDMS would potentially have many benefits to both projects. CLIDATA is a proven CDMS solution that is very well established. The CLIDATA Web API specification is likely to support many of the capabilities that are also required by OpenCDMS. Reuse of the existing API specification would provide a clear way in which CLIDATA could become more involved in OpenCDMS. CLIDATA is a proprietary (closed-source) system, so OpenCDMS users would not benefit from CLIDATA software capabilities without licencing a copy of the software. However, since OpenCDMS is being developed and released under the permissive MIT open-source licence, CLIDATA users would have access to features such as the OpenCDMS process library in addition to standard CLIDATA capabilities. Bureau of Meteorology The Australian Bureau of Meteorology has recently invested in the redevelopment of their internal CDMS and it is believed that the new system makes use of Web API(s). Reuse of their API specification in OpenCDMS would have several benefits for the Bureau, including enabling them to become more involved in the OpenCDMS project and the Bureau would also be able to benefit from the open-source capabilities being developed. Adoption of the Australian API specification may also help the OpenCDMS project align more closely with the CliDE project. The CliDE team intend to add a Web API at some point in the future and it is likely that this API specification may be heavily influenced by the API(s) developed in BOM. Belize SURFACE Other options for existing APIs also exist. One possibility is the Web API recently developed for the Belize custom CDMS. The Web API is still developmental, but adoption of this Web API for OpenCDMS would present clear opportunities for both projects and should be considered if the other options above fail. The Belize SURFACE CDMS has some implementation similarities to OpenCDMS including being developed in Python (Django) and making use of TimescaleDB (which has been proposed as an option for the implementation of the OpenCDMS Reference Implementation). Existing API standards \u00b6 In addition to an initial \u201csimple\u201d web API for OpenCDMS to make use of internally, the intention is to support other existing standards. OGC API \u2013 Environmental Data Retrieval Standard Experts from the Met Office have worked with partners in the Open Geospatial Consortium (OGC) to create the OGC API - Environmental Data Retrieval Standard (OGC API \u2013 EDR). The Met Office\u2019s externally facing services, like ServiceHub, have been influenced by this work and may converge with the standard in the future. Use of OGC API \u2013 EDR within OpenCDMS would allow the OpenCDMS project to also provide feedback and potential extensions to the standard (see Future API Standards below). For example, an issue has been raised on GitHub in the OpenCDMS Data Model repository for further discussion on representing dates, including the period of observations. It was agreed that partial dates, e.g. 2020-11 to represent November 2020, were not necessary since CDMSs typically record a full date and time at either the beginning or end of the observation period along with the period\u2019s duration. Future Web API Standards are likely to need additional capabilities like being able to filter by open and closed date intervals. Future API Standards \u00b6 No existing APIs support all of the functionalities that will be required by the next-generation CDMS Reference Implementation. The expectation is that a CDMS API Standard can be developed that can be utilised by any CDMS, where the open-source OpenCDMS code would exist as a Reference Implementation. Potentially this standard could be used for compliance testing and certification. The CDMS Reference Implementation is likely to build on OGC API. However, even emerging standards like the OGC API \u2013 EDR do not support all of the necessary CDMS business logic and therefore further work will be required.","title":"Simple Web API - Working Group (SWA-WG)"},{"location":"groups/working-group/swa-wg/#simple-web-api-working-group-swa-wg","text":"Co-ordinator: (vacant)","title":"Simple Web API - Working Group (SWA-WG)"},{"location":"groups/working-group/swa-wg/#terminate-date","text":"December 2020 (extended) December 2022","title":"Terminate date"},{"location":"groups/working-group/swa-wg/#deliverables","text":"Document existing standards and implementations that impact on the design of the Web API (December 2020) Develop a complete specification for version 1.0 of the Web API (December 2022) The original plan was to complete the specification for version 1.0 of the Web API by December 2020. However, the project has focused instead on progressing the Data and Process library APIs that are being written in the Python programming language. Work on the Python APIs will inform the Web API. Existing standards and implementations that impact on the design of the OpenCDMS Web API are summarised below.","title":"Deliverables"},{"location":"groups/working-group/swa-wg/#existing-web-apis","text":"CLIDATA CLIDATA is used extensively in developing countries and has a strong presence in both Central and West Africa and the Caribbean. During discussions with the CLIDATA team it was mentioned that CLIDATA already makes use of a Web API. Reuse of the CLIDATA Web API in OpenCDMS would potentially have many benefits to both projects. CLIDATA is a proven CDMS solution that is very well established. The CLIDATA Web API specification is likely to support many of the capabilities that are also required by OpenCDMS. Reuse of the existing API specification would provide a clear way in which CLIDATA could become more involved in OpenCDMS. CLIDATA is a proprietary (closed-source) system, so OpenCDMS users would not benefit from CLIDATA software capabilities without licencing a copy of the software. However, since OpenCDMS is being developed and released under the permissive MIT open-source licence, CLIDATA users would have access to features such as the OpenCDMS process library in addition to standard CLIDATA capabilities. Bureau of Meteorology The Australian Bureau of Meteorology has recently invested in the redevelopment of their internal CDMS and it is believed that the new system makes use of Web API(s). Reuse of their API specification in OpenCDMS would have several benefits for the Bureau, including enabling them to become more involved in the OpenCDMS project and the Bureau would also be able to benefit from the open-source capabilities being developed. Adoption of the Australian API specification may also help the OpenCDMS project align more closely with the CliDE project. The CliDE team intend to add a Web API at some point in the future and it is likely that this API specification may be heavily influenced by the API(s) developed in BOM. Belize SURFACE Other options for existing APIs also exist. One possibility is the Web API recently developed for the Belize custom CDMS. The Web API is still developmental, but adoption of this Web API for OpenCDMS would present clear opportunities for both projects and should be considered if the other options above fail. The Belize SURFACE CDMS has some implementation similarities to OpenCDMS including being developed in Python (Django) and making use of TimescaleDB (which has been proposed as an option for the implementation of the OpenCDMS Reference Implementation).","title":"Existing Web APIs"},{"location":"groups/working-group/swa-wg/#existing-api-standards","text":"In addition to an initial \u201csimple\u201d web API for OpenCDMS to make use of internally, the intention is to support other existing standards. OGC API \u2013 Environmental Data Retrieval Standard Experts from the Met Office have worked with partners in the Open Geospatial Consortium (OGC) to create the OGC API - Environmental Data Retrieval Standard (OGC API \u2013 EDR). The Met Office\u2019s externally facing services, like ServiceHub, have been influenced by this work and may converge with the standard in the future. Use of OGC API \u2013 EDR within OpenCDMS would allow the OpenCDMS project to also provide feedback and potential extensions to the standard (see Future API Standards below). For example, an issue has been raised on GitHub in the OpenCDMS Data Model repository for further discussion on representing dates, including the period of observations. It was agreed that partial dates, e.g. 2020-11 to represent November 2020, were not necessary since CDMSs typically record a full date and time at either the beginning or end of the observation period along with the period\u2019s duration. Future Web API Standards are likely to need additional capabilities like being able to filter by open and closed date intervals.","title":"Existing API standards"},{"location":"groups/working-group/swa-wg/#future-api-standards","text":"No existing APIs support all of the functionalities that will be required by the next-generation CDMS Reference Implementation. The expectation is that a CDMS API Standard can be developed that can be utilised by any CDMS, where the open-source OpenCDMS code would exist as a Reference Implementation. Potentially this standard could be used for compliance testing and certification. The CDMS Reference Implementation is likely to build on OGC API. However, even emerging standards like the OGC API \u2013 EDR do not support all of the necessary CDMS business logic and therefore further work will be required.","title":"Future API Standards"}]}